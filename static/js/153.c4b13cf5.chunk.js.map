{"version":3,"file":"static/js/153.c4b13cf5.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","pages/MoviesDetails.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MoviesDetails.jsx","services/api.js"],"sourcesContent":["export const Error = ({ error }) => {\n  <p\n    style={{\n      textAlign: 'center',\n    }}\n  >\n    Ooops... Something went wrong. {error} Unable to download trending movies.\n    Try again later.\n  </p>;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackBtn = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  width: 100px;\n  height: 30px;\n  padding: 5px;\n  margin-left: 20px;\n\n  border: 1px solid ${({ theme: { colors } }) => colors.accent};\n  border-radius: 10px;\n  margin-bottom: 20px;\n  color: ${({ theme: { colors } }) => colors.accentDark};\n  font-weight: 600;\n  background-color: ${({ theme: { colors } }) => colors.backgroundBtn};\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    scale 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    scale: 1.1;\n    box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  }\n`;\n","import styled from 'styled-components';\nimport { BackBtn } from 'pages/MoviesDetails.styled';\n\nexport const ContainerCard = styled.div`\n  @media screen and (min-width: 600px) {\n    display: flex;\n    gap: 30px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin: 0 auto;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  @media screen and (min-width: 600px) {\n    width: 300px;\n    margin-bottom: 0;\n    margin: 0;\n  }\n`;\nexport const MovieTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const TextTitle = styled.span`\n  font-weight: 600;\n`;\nexport const TextOverview = styled.span`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\nexport const InfoText = styled.h3`\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\nexport const InfoList = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n`;\n\nexport const InfoItem = styled(BackBtn)`\n  margin-left: 0;\n`;\n","import {\n  Image,\n  MovieTitle,\n  InfoItem,\n  InfoList,\n  InfoText,\n  TextOverview,\n  TextTitle,\n  ContainerCard,\n} from './MovieCard.styled';\n\nconst MovieCard = ({\n  detail: { poster_path, title, vote_average, overview, genres },\n}) => {\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://image.tmdb.org/t/p/w500/dykOcAqI01Fci5cKQW3bEUrPWwU.jpg';\n  const rating = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n  const review = overview ? overview : 'Not overview';\n\n  return (\n    <>\n      <ContainerCard>\n        <Image src={posterUrl} alt={title} width=\"200\"></Image>\n        <div>\n          <MovieTitle>{title}</MovieTitle>\n          <p>\n            <TextTitle>User score:</TextTitle> {rating}\n          </p>\n          <TextOverview>\n            <TextTitle>Overview</TextTitle>\n            {review}\n          </TextOverview>\n          {genres && genres.length > 0 && (\n            <p>\n              <TextTitle>Genres: </TextTitle>\n              {genres.map(genre => genre.name).join(', ')}\n            </p>\n          )}\n        </div>\n      </ContainerCard>\n      <div>\n        <InfoText>Additional information</InfoText>\n        <InfoList>\n          <li>\n            <InfoItem to=\"cast\">Cast</InfoItem>\n          </li>\n          <li>\n            <InfoItem to=\"reviews\">Reviews</InfoItem>\n          </li>\n        </InfoList>\n      </div>\n    </>\n  );\n};\nexport default MovieCard;\n","import { Error } from 'components/Error/Error';\nimport Loading from 'components/Loading/Loading';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport { BackBtn } from './MoviesDetails.styled';\n\nconst MoviesDetails = () => {\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [selectedMovieDetail, setSelectedMovieDetail] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getMovieDetails = async movieId => {\n      try {\n        setLoading(true);\n        const movieDetailData = await fetchMovieDetails(movieId);\n        setSelectedMovieDetail(movieDetailData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loading />}\n      {error && <Error error={error} />}\n      <BackBtn to={backLinkLocationRef.current}>\n        <TiArrowBackOutline />\n        Go back\n      </BackBtn>\n      <MovieCard detail={selectedMovieDetail} />\n      <Suspense fallback={<Loading />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'ef95397de100ad4893946e66bda31619';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst TiME_WINDOW = 'week';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${API_URL}trending/movie/${TiME_WINDOW}?api_key=${API_KEY}&page=1`\n  );\n\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`${API_URL}movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios.get(\n    `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["Error","_ref","error","BackBtn","styled","Link","_templateObject","_taggedTemplateLiteral","theme","colors","accent","_ref2","accentDark","_ref3","backgroundBtn","_ref4","shadow","ContainerCard","Image","_templateObject2","MovieTitle","_templateObject3","TextTitle","_templateObject4","TextOverview","_templateObject5","InfoText","_templateObject6","InfoList","_templateObject7","InfoItem","_templateObject8","_ref$detail","detail","poster_path","title","vote_average","overview","genres","posterUrl","concat","rating","toFixed","review","_jsxs","_Fragment","children","_jsx","src","alt","width","length","map","genre","name","join","to","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","loading","setLoading","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","_useState3","_useState4","selectedMovieDetail","setSelectedMovieDetail","_useState5","_useState6","setError","useEffect","getMovieDetails","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieDetailData","wrap","_context","prev","next","fetchMovieDetails","sent","t0","message","finish","stop","_x","apply","arguments","Loading","current","TiArrowBackOutline","MovieCard","Suspense","fallback","Outlet","API_KEY","API_URL","fetchTrendingMovies","_yield$axios$get","data","axios","abrupt","_callee2","id","_yield$axios$get2","_context2","fetchSearchMovie","_callee3","query","_yield$axios$get3","_context3","_x2","fetchMovieCast","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}