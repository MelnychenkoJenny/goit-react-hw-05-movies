{"version":3,"file":"static/js/736.12717932.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Error/Error.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  column-gap: 10px;\n  row-gap: 20px;\n  text-align: center;\n`;\nexport const CastItem = styled.li`\n  flex-basis: calc((100% - 10px) / 2);\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: ${({ theme: { colors } }) => colors.shadow};\n\n  @media screen and (min-width: 400px) {\n    flex-basis: calc((100% - 20px) / 3);\n  }\n  @media screen and (min-width: 640px) {\n    flex-basis: calc((100% - 20px) / 5);\n  }\n  @media screen and (min-width: 1270px) {\n    flex-basis: calc((100% - 30px) / 7);\n  }\n`;\nexport const CastInfo = styled.div`\n  padding: 5px;\n`;\n\nexport const Empty = styled.p`\n  text-align: center;\n`;\n","import { Error } from 'components/Error/Error';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport { CastInfo, CastItem, CastList, Empty } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getCast = async movieId => {\n      try {\n        const { cast } = await fetchMovieCast(movieId);\n\n        setCastInfo(cast);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    getCast(movieId);\n  }, [movieId]);\n  return (\n    <>\n      {castInfo.length ? (\n        <CastList>\n          {castInfo.map(({ id, profile_path, name, character }) => (\n            <CastItem key={id}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={`${name}`}\n                  width=\"200\"\n                ></img>\n              ) : (\n                <img\n                  src={\n                    'https://image.tmdb.org/t/p/w500/dykOcAqI01Fci5cKQW3bEUrPWwU.jpg'\n                  }\n                  alt=\"Not found\"\n                  width=\"200\"\n                ></img>\n              )}\n              <CastInfo>\n                <h3>{name}</h3>\n                {character ? (\n                  <p>Character: {character}</p>\n                ) : (\n                  <p>Character: Unknown</p>\n                )}\n              </CastInfo>\n            </CastItem>\n          ))}\n        </CastList>\n      ) : (\n        <Empty>\n          Unfortunately, we don't have cast information for this movie.\n        </Empty>\n      )}\n      {error && <Error error={error} />}\n    </>\n  );\n};\n\nexport default Cast;\n","export const Error = ({ error }) => {\n  <p\n    style={{\n      textAlign: 'center',\n    }}\n  >\n    Ooops... Something went wrong. {error} Unable to download trending movies.\n    Try again later.\n  </p>;\n};\n","import axios from 'axios';\n\nconst API_KEY = 'ef95397de100ad4893946e66bda31619';\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst TiME_WINDOW = 'week';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${API_URL}trending/movie/${TiME_WINDOW}?api_key=${API_KEY}&page=1`\n  );\n\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await axios.get(`${API_URL}movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios.get(\n    `${API_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${API_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","_ref","theme","colors","shadow","CastInfo","_templateObject3","Empty","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","castInfo","setCastInfo","_useState3","_useState4","error","setError","useEffect","getCast","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$fetchMovieCast","cast","wrap","_context","prev","next","fetchMovieCast","sent","t0","message","stop","_x","apply","arguments","_jsxs","_Fragment","children","length","_jsx","map","_ref2","id","profile_path","name","character","src","concat","alt","width","Error","API_KEY","API_URL","fetchTrendingMovies","_yield$axios$get","data","axios","abrupt","fetchMovieDetails","_callee2","_yield$axios$get2","_context2","fetchSearchMovie","_ref3","_callee3","query","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}